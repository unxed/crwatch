<?php

require 'vendor/autoload.php';
require_once 'config.php';

use Telegram\Bot\Api;

// =============================================================================
// –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò
// =============================================================================

function logMessage(string $message): void {
    file_put_contents(LOG_FILE, date('[Y-m-d H:i:s] ') . $message . PHP_EOL, FILE_APPEND);
}

function escapeMarkdownV2(string $text): string {
    $escapeChars = ['_', '*', '[', ']', '(', ')', '~', '`', '>', '#', '+', '-', '=', '|', '{', '}', '.', '!'];
    return str_replace($escapeChars, array_map(fn($char) => '\\' . $char, $escapeChars), $text);
}

function truncateForTelegram(string $text, int $maxLength = 1000): string {
    if (mb_strlen($text) > $maxLength) {
        return mb_substr($text, 0, $maxLength) . '...';
    }
    return $text;
}

/**
 * –§—É–Ω–∫—Ü–∏—è "–Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏" —Ç–µ–ø–µ—Ä—å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫—É —Å –∞–¥—Ä–µ—Å–æ–º.
 */
function normalizeSearchQuery(string $addressText): array
{
    $stopWords = [
        '—É–ª–∏—Ü–∞', '—É–ª', '–æ–±–ª–∞—Å—Ç—å', '–æ–±–ª', '—Ä–∞–π–æ–Ω', '—Ä-–Ω', '—Ä–Ω', '–≥–æ—Ä–æ–¥', '–≥–æ—Ä', '–≥',
        '–ø–æ—Å–µ–ª–æ–∫', '–ø–æ—Å', '–ø', '—Å–µ–ª–æ', '—Å', '–¥–µ—Ä–µ–≤–Ω—è', '–¥–µ—Ä', '–¥', '–¥–æ–º',
        '–ø—Ä–æ—Å–ø–µ–∫—Ç', '–ø—Ä-—Ç', '–ø—Ä', '–±—É–ª—å–≤–∞—Ä', '–±-—Ä', '—Ä–µ—Å–ø—É–±–ª–∏–∫–∞', '—Ä–µ—Å–ø'
    ];

    $text = preg_replace('/[.,\/#!$%\^&\*;:{}=\-`~()]/', ' ', mb_strtolower($addressText));
    $words = preg_split('/\s+/', $text, -1, PREG_SPLIT_NO_EMPTY);

    return array_diff($words, $stopWords);
}


// =============================================================================
// –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø
// =============================================================================
try {
    $telegram = new Api(BOT_TOKEN);
    $dsn = "mysql:host=" . DB_HOST . ";dbname=" . DB_NAME . ";charset=utf8mb4";
    $options = [
        PDO::ATTR_ERRMODE            => PDO::ERRMODE_EXCEPTION,
        PDO::ATTR_DEFAULT_FETCH_MODE => PDO::FETCH_ASSOC,
        PDO::ATTR_EMULATE_PREPARES   => false,
    ];
    $pdo = new PDO($dsn, DB_USER, DB_PASS, $options);
} catch (Exception $e) {
    logMessage("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: " . $e->getMessage());
    die("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: " . $e->getMessage());
}

// =============================================================================
// –û–°–ù–û–í–ù–û–ô –¶–ò–ö–õ –ë–û–¢–ê
// =============================================================================
echo "–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω... –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏.\n";
logMessage("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.");

logMessage("–û—á–∏—Å—Ç–∫–∞ –æ—á–µ—Ä–µ–¥–∏ —Å—Ç–∞—Ä—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π...");
$updates = $telegram->getUpdates(['offset' => -1]);
$offset = $updates ? end($updates)->getUpdateId() : 0;
logMessage("–û—á–µ—Ä–µ–¥—å –æ—á–∏—â–µ–Ω–∞. –ù–∞—á–∏–Ω–∞–µ–º —Å–ª—É—à–∞—Ç—å –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.");


while (true) {
    try {
        $updates = $telegram->getUpdates(['offset' => $offset + 1, 'timeout' => 30]);

        foreach ($updates as $update) {
            $offset = $update->getUpdateId();
            $message = $update->getMessage();
            if (!$message) continue;

            $chatId = $message->getChat()->getId();
            $text = $message->getText();
            if (empty($text)) continue;

            if ($text === '/start') {
                // –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç–µ–ø–µ—Ä—å —É–ø–æ–º–∏–Ω–∞–µ—Ç –∫–∞–ø—Ä–µ–º–æ–Ω—Ç
                $startMessage = "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ\! üëã\n\n–Ø –±–æ—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –∑–∞–∫—É–ø–æ–∫ –ø–æ *–∫–∞–ø–∏—Ç–∞–ª—å–Ω–æ–º—É —Ä–µ–º–æ–Ω—Ç—É* –ø–æ –∞–¥—Ä–µ—Å—É\.";
                $mainInfo = "–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –∞–¥—Ä–µ—Å –∏–ª–∏ –µ–≥–æ —á–∞—Å—Ç—å\. –ù–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ ‚Äî –∞–¥—Ä–µ—Å, –Ω–∞ –≤—Ç–æ—Ä–æ–π \(–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ\) ‚Äî –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –Ω–∞—á–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –∑–∞–∫—É–ø–∫–∏\.";
                $exampleTitle1 = "–ü—Ä–∏–º–µ—Ä –ø–æ–∏—Å–∫–∞ —Ç–æ–ª—å–∫–æ –ø–æ –∞–¥—Ä–µ—Å—É:";
                $exampleBlock1 = "```\n–ë—É—Ä—è—Ç–∏—è –°–∞–≥–∞–Ω-–ù—É—Ä –ë–æ–ª—å–Ω–∏—á–Ω–∞—è 12\n```";
                $exampleTitle2 = "–ü—Ä–∏–º–µ—Ä –ø–æ–∏—Å–∫–∞ —Å —Ñ–∏–ª—å—Ç—Ä–æ–º –ø–æ —Ü–µ–Ω–µ \(–æ—Ç 500 —Ç—ã—Å\. —Ä—É–±\.\):";
                $exampleBlock2 = "```\n–û—Ä–ª–æ–≤—Å–∫–∞—è\n500000000\n```";

                $fullMessage = implode("\n\n", [$startMessage, $mainInfo, $exampleTitle1, $exampleBlock1, $exampleTitle2, $exampleBlock2]);
                $telegram->sendMessage(['chat_id' => $chatId, 'text' => $fullMessage, 'parse_mode' => 'MarkdownV2']);
                continue;
            }

            logMessage("–ü–æ–ª—É—á–µ–Ω –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –æ—Ç chat_id $chatId: '$text'");

            $lines = explode("\n", trim($text));
            $addressQuery = $lines[0] ?? '';
            $priceQuery = $lines[1] ?? null;

            $minPrice = 0.0;
            if ($priceQuery !== null && is_numeric(trim($priceQuery))) {
                $minPrice = (float)trim($priceQuery);
            }

            $keywords = normalizeSearchQuery($addressQuery);

            if (empty($keywords)) {
                $telegram->sendMessage(['chat_id' => $chatId, 'text' => "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ."]);
                continue;
            }

            $fulltext_words = [];
            $rlike_conditions = [];
            $params = [];

            foreach ($keywords as $keyword) {
                if (mb_strlen($keyword) < 3 || preg_match('/^\d/', $keyword)) {
                    $rlike_conditions[] = "pl.address RLIKE '\\\\b" . preg_quote($keyword) . "\\\\b'";
                } else {
                    $fulltext_words[] = '+' . $keyword . '*';
                }
            }

            $sql = "
                SELECT 
                    p.reg_number, pl.address AS work_location, p.procurement_object,
                    c.name AS customer_name, p.initial_price, contr.conclusion_date
                FROM procurement_locations AS pl
                JOIN procurements AS p ON pl.procurement_id = p.id
                LEFT JOIN customers AS c ON p.customer_id = c.id
                LEFT JOIN contracts AS contr ON p.id = contr.procurement_id
                WHERE 1=1 
            ";

            if (!empty($fulltext_words)) {
                $fulltext_string = implode(' ', $fulltext_words);
                $sql .= " AND MATCH(pl.address) AGAINST(:search_string IN BOOLEAN MODE)";
                $params[':search_string'] = $fulltext_string;
            }

            if (!empty($rlike_conditions)) {
                $sql .= " AND (" . implode(' AND ', $rlike_conditions) . ")";
            }

            if ($minPrice > 0) {
                $sql .= " AND p.initial_price >= :min_price";
                $params[':min_price'] = $minPrice;
            }

            $sql .= " ORDER BY p.initial_price DESC LIMIT 10";

            logMessage("–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω SQL: " . preg_replace('/\s+/', ' ', $sql));
            logMessage("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã: " . json_encode($params));

            $stmt = $pdo->prepare($sql);
            $stmt->execute($params);
            $results = $stmt->fetchAll();

            if (empty($results)) {
                $telegram->sendMessage(['chat_id' => $chatId, 'text' => "üòî –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ."]);
            } else {
                $count = count($results);

                // –ò–ó–ú–ï–ù–ï–ù–ò–ï: –£–±—Ä–∞–Ω–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∫–∞–ø—Ä–µ–º–æ–Ω—Ç–∞ –∏–∑ –æ—Ç–≤–µ—Ç–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
                $foundMessage = "‚úÖ –ù–∞–π–¥–µ–Ω–æ –∑–∞–∫—É–ø–æ–∫: *" . $count . "*";
                if ($minPrice > 0) {
                    $priceFormatted = number_format($minPrice, 0, ',', ' ');
                    $foundMessage .= " —Å –Ω–∞—á–∞–ª—å–Ω–æ–π —Ü–µ–Ω–æ–π –æ—Ç *" . escapeMarkdownV2($priceFormatted . ' ‚ÇΩ') . "*";
                }

                $telegram->sendMessage([
                    'chat_id' => $chatId,
                    'text' => $foundMessage,
                    'parse_mode' => 'MarkdownV2'
                ]);

                foreach ($results as $index => $row) {
                    $priceFormatted = $row['initial_price'] ? number_format($row['initial_price'], 2, ',', ' ') . ' ‚ÇΩ' : '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö';

                    $objectText = truncateForTelegram($row['procurement_object'] ?? '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö', 500);
                    $locationText = truncateForTelegram($row['work_location'] ?? '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö', 250);
                    $detailsUrl = "https://zakupki.gov.ru/epz/order/notice/ea615/view/common-info.html?regNumber=" . $row['reg_number'];

                    $itemBlock = [
                        "*" . escapeMarkdownV2(($index + 1) . ". –ó–∞–∫—É–ø–∫–∞ ‚Ññ" . $row['reg_number']) . "*",
                        "",
                        "*–û–±—ä–µ–∫—Ç:* " . escapeMarkdownV2($objectText),
                        "*–ê–¥—Ä–µ—Å:* " . escapeMarkdownV2($locationText),
                        "*–ù–∞—á–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞:* " . escapeMarkdownV2($priceFormatted),
                        "*–î–∞—Ç–∞ –∑–∞–∫–ª—é—á–µ–Ω–∏—è:* " . escapeMarkdownV2($row['conclusion_date'] ?? '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'),
                        "*–ó–∞–∫–∞–∑—á–∏–∫:* " . escapeMarkdownV2($row['customer_name'] ?? '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'),
                        "[–ü–æ–¥—Ä–æ–±–Ω–µ–µ –Ω–∞ —Å–∞–π—Ç–µ](" . $detailsUrl . ")"
                    ];

                    $reply = implode("\n", $itemBlock);

                    try {
                        $telegram->sendMessage([
                            'chat_id' => $chatId,
                            'text' => $reply,
                            'parse_mode' => 'MarkdownV2',
                            'disable_web_page_preview' => true
                        ]);
                    } catch (Exception $e) {
                        $plainTextReply = preg_replace('/([_*\[\]()~`>#+\-=|{}.!\\\\])/', '', $reply);
                        $telegram->sendMessage(['chat_id' => $chatId, 'text' => $plainTextReply]);
                        logMessage('–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Markdown: ' . $e->getMessage());
                    }
                    usleep(300000);
                }
            }
        }
    } catch (Exception $e) {
        logMessage("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ: " . $e->getMessage());
    }
    sleep(1);
}